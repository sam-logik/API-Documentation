openapi: 3.0.1
info:
  title: Logik Configurator Runtime APIs V1
  version: 2.0.1
  description: |
    Logik.io End User API Definition. Shows payload structure and schema, authroization approach and endpoint format. Can be used for custom UI or headless implementations.

    ## Important Versioning Information

    Blueprints that use Product Picker Fields ***must*** use the `application/vnd.logik.cfg-v2+json` Content-Type when making requests.

     The Runtime APIs are versioned using different Content-Types. There are 2 Content-Type formats, `application/json` for v1 and `application/vnd.logik.cfg-v2+json` for v2.
      - `application/json`: can be used with regular Logik field types (number, boolean, text and picklist) and sets.
      - `application/vnd.logik.cfg-v2+json`: can be used with all regular field types as well as Product Picker Fields.
      
    The Accept Header should match the Content-Type being used, either:
      - `application/json`: for v1.
      - `application/vnd.logik.cfg-v2+json, application/json`: for v2.

  contact:
    email: support@logik.io
servers:
  - url: https://{tenant}.{sector}.logik.io
    variables:
      tenant:
        default: example
        description: "Logik.io tenant"
      sector:
        default: test
        description: "Logik.io sector"
security:
  - RuntimeTokenBearerAuth: []
tags:
  - name: Configuration
    description: Creating new configurations, reconfiguring existing configurations, making updates to a configuration and saving changes.
  - name: Bill of Materials
    description: Get Bill of Materials (BOM) information for a given configuration UUID.
paths:
  /api:
    post:
      tags:
        - Configuration
      summary: Start Configuration
      description: Initialize a new Configuration or reconfigure an existing Configuration if passing an existing Logik Configuration UUID in the Request Body.
      operationId: startConfig
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
      requestBody:
        description: Configurable Product Object to initialize
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitConfig"
      responses:
        200:
          description: Return the state of configuration at initalization or reconfiguration. Includes fields, messages and products.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"

  /api/{uuid}:
    get:
      tags:
        - Configuration
      summary: Get Configuration
      description: |
        Returns the Configuration state from the given Configuration UUID. This *does not* allow changes to made to the Configuration. To make changes, reconfigure using the POST call.
      operationId: getConfigByUuid
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - $ref: "#/components/parameters/ConfigurationUUID"
      responses:
        200:
          description: Return initial state of fields, messages and products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
    patch:
      tags:
        - Configuration
      summary: Update or Save Configuration
      description: |
        Update or Save Configuration with the provided Configuration UUID.
      operationId: updateConfigByUuid
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - $ref: "#/components/parameters/ConfigurationUUID"
        - $ref: "#/components/parameters/queryDelta"
        - $ref: "#/components/parameters/querySave"
      requestBody:
        description: Update or Save Payload for a Configuration.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConfig"
        required: true
      responses:
        200:
          description: Returns state of fields, messages and products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
  /api/{uuid}/sets/{setVariableName}:
    get:
      tags:
        - Configuration
      summary:
        Access fields in a given Set. Use if Set flagged in relatedChanges
        param
      operationId: getSet
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - $ref: "#/components/parameters/ConfigurationUUID"
        - name: setVariableName
          in: path
          description: Variable name of the Set defined in admin for which data is requested
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/queryPage"
        - $ref: "#/components/parameters/queryLimit"
        - $ref: "#/components/parameters/querySort"
      responses:
        200:
          description: Paginated details for a given Set variable name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SetsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
  /api/{uuid}/bom:
    get:
      tags:
        - Bill of Materials
      summary: Get BOM
      description: Get BOM with the given uuid for current state of Configuration
      operationId: getAllBom
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - $ref: "#/components/parameters/ConfigurationUUID"
        - $ref: "#/components/parameters/queryPage"
        - $ref: "#/components/parameters/queryLimit"
        - $ref: "#/components/parameters/querySort"
        - name: bomType
          in: query
          description: Pass comma separated list of bom types to be returned
          schema:
            type: string
      responses:
        200:
          description: Return Entire BOM snapshot of Configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BOMResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
  /api/{uuid}/bom/sales:
    get:
      tags:
        - Bill of Materials
      summary: Get Sales BOM
      description: Get Sales BOM with the given uuid for current state of Configuration
      operationId: getSalesBom
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - $ref: "#/components/parameters/ConfigurationUUID"
        - $ref: "#/components/parameters/queryPage"
        - $ref: "#/components/parameters/queryLimit"
        - $ref: "#/components/parameters/querySort"
      responses:
        200:
          description: Return current sales BOM of Configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BOMResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
  /api/{uuid}/bom/manufacturing:
    get:
      tags:
        - Bill of Materials
      summary: Get Manufacturing BOM
      description: Get Manufacturing BOM with the given uuid for current state of Configuration.
      operationId: getManufacturingBomV2
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - $ref: "#/components/parameters/ConfigurationUUID"
        - $ref: "#/components/parameters/queryPage"
        - $ref: "#/components/parameters/queryLimit"
        - $ref: "#/components/parameters/querySort"
      responses:
        200:
          description: Return Manufacturing BOM snapshot of Configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BOMResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
  /api/{uuid}/bom/{custom}:
    get:
      tags:
        - Bill of Materials
      summary: Get Custom BOM
      description: Get Custom BOM type line items defined in the admin
      operationId: getBomByNameV2
      parameters:
        - $ref: "#/components/parameters/headerOrigin"
        - name: custom
          in: path
          description: Custom BOM Type name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ConfigurationUUID"
        - $ref: "#/components/parameters/queryPage"
        - $ref: "#/components/parameters/queryLimit"
        - $ref: "#/components/parameters/querySort"
      responses:
        200:
          description: Returns BOM snapshot of Configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BOMResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "5XX":
          $ref: "#/components/responses/ServerError"
components:
  parameters:
    headerOrigin:
      in: header
      name: Origin
      description: Request Origin, needs to be one of the allowed origins for the Runtime Token being used.
      schema:
        type: string
      required: true
    ConfigurationUUID:
      in: path
      name: uuid
      description: Unique Configuration ID Value
      required: true
      schema:
        type: string
    queryPage:
      in: "query"
      name: "page"
      description: "Page number of results to return"
      schema:
        type: "number"
        default: 0
      required: true
    queryLimit:
      in: "query"
      name: "limit"
      description: "Size of the paged data results"
      schema:
        type: "number"
        default: 100
      required: true
    querySort:
      in: "query"
      name: "sort"
      description: "Sort field and order of the results, specify property and order{asc|desc} of sort in format field,asc[desc]"
      schema:
        type: "string"
        default: "modified%2CDESC"
      required: true
    querySave:
      name: save
      in: query
      description:
        Pass save parameter as true to save the Configuration and send
        BOM to connected application
      schema:
        type: boolean
        default: false
    queryDelta:
      name: delta
      in: query
      description:
        If `delta=true` the API only retruns changed data. This is default behavior
        of the API if the parameter is omitted.
      schema:
        type: boolean
        default: true

  responses:
    BadRequest:
      description: Bad request. See `errorMessage` for additional details.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotAuthorized:
      description: Authorization information is missing or invalid.
    Forbidden:
      description: Credentials are valid but insufficient privileges to perform the action on the resource.
    NotFound:
      description: Resource was not found. See `errorMessage` for additional details.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ServerError:
      description: Unexpected Server Error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
    FieldPayload:
      type: object
      properties:
        variableName:
          type: string
        value:
          type: string
    UpdateConfig:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: "#/components/schemas/FieldPayload"
    InitConfig:
      type: object
      properties:
        sessionContext:
          type: object
          properties:
            stateful:
              type: boolean
        partnerData:
          required:
            - product
          type: object
          properties:
            product:
              type: object
              properties:
                configuredProductId:
                  type: string
                  description: Product id of the Product linked to Logik Blueprint
                configurationAttributes:
                  type: object
                  properties:
                    LGK__ConfigurationId__c:
                      type: string
                      description:
                        Configuration Id which was generated for saved
                        configuration
        quote:
          type: object
          properties:
            SBQQ__PricebookId__c:
              type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/FieldPayload"
    BOMResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                empty:
                  type: boolean
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
            offset:
              type: integer
            pageNumber:
              type: integer
            pageSize:
              type: integer
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        size:
          type: integer
        number:
          type: integer
        numberOfElements:
          type: integer
        first:
          type: boolean
        empty:
          type: boolean
        total:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: string
        selectionType:
          type: string
        quantity:
          type: integer
        bomType:
          type: string
        level:
          type: integer
        parentProduct:
          type: integer
        notes:
          type: string
        uniqueIdentifier:
          type: integer
        description:
          type: string
        externalId:
          type: string
        name:
          type: string
        price:
          type: number
        extPrice:
          type: number
    Field:
      type: object
      properties:
        value:
          type: string
        dataType:
          type: string
        visibilityState:
          type: string
        editable:
          type: string
        variableName:
          type: string
        optionSet:
          required:
            - options
          type: object
          properties:
            options:
              type: array
              items:
                required:
                  - label
                  - orderNumber
                  - state
                  - value
                type: object
                properties:
                  label:
                    type: string
                  state:
                    type: string
                  value:
                    type: string
                  imageUrl:
                    type: string
                  orderNumber:
                    type: integer
    Message:
      required:
        - error
        - field
        - message
        - type
      type: object
      properties:
        message:
          type: string
        type:
          type: string
        error:
          type: boolean
        field:
          type: string
    ConfigResponse:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
        uuid:
          type: string
        revision:
          type: integer
        valid:
          type: boolean
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        productChange:
          type: boolean
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        layouts:
          type: array
          items:
            required:
              - url
            type: object
            properties:
              url:
                type: string
        relatedChanges:
          type: array
          items:
            $ref: "#/components/schemas/relatedChangesValue"
    relatedChangesValue:
      type: object
      properties:
        key:
          type: string
        type:
          type: string
          description:
            Value of SET|PRODUCT which will return KEY value as variable
            name of set or static value products
    SetsContent:
      type: object
      properties:
        index:
          type: integer
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
    SetsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/SetsContent"
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                empty:
                  type: boolean
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
            offset:
              type: integer
            pageNumber:
              type: integer
            pageSize:
              type: integer
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        size:
          type: integer
        number:
          type: integer
        numberOfElements:
          type: integer
        first:
          type: boolean
        empty:
          type: boolean
        total:
          type: integer

  securitySchemes:
    RuntimeTokenBearerAuth:
      type: http
      scheme: bearer
      description: |
        Runtime Token to use for requests. Created in the Logik.io Admin, under Runtime Clients. 

        Must also be configured to allow the Origin that is passed as a Header parameter in all requests.
